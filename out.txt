[[36m2025-06-09 14:55:54,665[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - [rank: 0] Enforcing tags! <cfg.extras.enforce_tags=True>[0m
[[36m2025-06-09 14:55:54,669[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - [rank: 0] Printing config tree with Rich! <cfg.extras.print_config=True>[0m
CONFIG
├── data
│   └── _target_: src.data.enhancer_train_datamodule.EnhancerTrainDataModule                                                  
│       data_dir: /storage/gabriel/basen_train//                                                                              
│       data_list: synth_lat_nfiq80_list_small.txt                                                                            
│       lat_subdir: /synth_lat_nfiq80/                                                                                        
│       ref_subdir: /ref_NFIQ80/                                                                                              
│       skel_subdir: /ref_skel/                                                                                               
│       bin_subdir: /ref_bin/                                                                                                 
│       mask_subdir: /synth_lat_nfiq80_masks/0/                                                                               
│       mnt_subdir: /mnts_ref_fusion/                                                                                         
│       apply_mask: 1                                                                                                         
│       batch_size: 128                                                                                                       
│       train_val_split:                                                                                                      
│       - 0.7                                                                                                                 
│       - 0.3                                                                                                                 
│       num_workers: 8                                                                                                        
│       pin_memory: true                                                                                                      
│                                                                                                                             
├── model
│   └── _target_: src.models.enhancer_module.EnhancerLitModule                                                                
│       optimizer:                                                                                                            
│         _target_: torch.optim.AdamW                                                                                         
│         _partial_: true                                                                                                     
│         lr: 0.0001                                                                                                          
│         weight_decay: 0.0004                                                                                                
│       scheduler:                                                                                                            
│         _target_: torch.optim.lr_scheduler.ReduceLROnPlateau                                                                
│         _partial_: true                                                                                                     
│         mode: min                                                                                                           
│         factor: 0.1                                                                                                         
│         patience: 2                                                                                                         
│       net:                                                                                                                  
│         _target_: src.models.components.ResUNet.ResUNet                                                                     
│         in_ch: 1                                                                                                            
│         ndim: 2                                                                                                             
│         out_ch: 2                                                                                                           
│       compile: false                                                                                                        
│       output_path: /home/gabriel/fingerprint-enhancement/output/                                                            
│       use_patches: false                                                                                                    
│                                                                                                                             
├── callbacks
│   └── model_checkpoint:                                                                                                     
│         _target_: lightning.pytorch.callbacks.ModelCheckpoint                                                               
│         dirpath: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-55-54/checkpoints                      
│         filename: epoch_{epoch:03d}                                                                                         
│         monitor: val/loss_best                                                                                              
│         verbose: false                                                                                                      
│         save_last: true                                                                                                     
│         save_top_k: 1                                                                                                       
│         mode: min                                                                                                           
│         auto_insert_metric_name: false                                                                                      
│         save_weights_only: false                                                                                            
│         every_n_train_steps: null                                                                                           
│         train_time_interval: null                                                                                           
│         every_n_epochs: null                                                                                                
│         save_on_train_epoch_end: null                                                                                       
│       early_stopping:                                                                                                       
│         _target_: lightning.pytorch.callbacks.EarlyStopping                                                                 
│         monitor: val/loss_best                                                                                              
│         min_delta: 0.0                                                                                                      
│         patience: 100                                                                                                       
│         verbose: false                                                                                                      
│         mode: min                                                                                                           
│         strict: true                                                                                                        
│         check_finite: true                                                                                                  
│         stopping_threshold: null                                                                                            
│         divergence_threshold: null                                                                                          
│         check_on_train_epoch_end: null                                                                                      
│       model_summary:                                                                                                        
│         _target_: lightning.pytorch.callbacks.RichModelSummary                                                              
│         max_depth: -1                                                                                                       
│       rich_progress_bar:                                                                                                    
│         _target_: lightning.pytorch.callbacks.RichProgressBar                                                               
│                                                                                                                             
├── logger
│   └── mlflow:                                                                                                               
│         _target_: lightning.pytorch.loggers.mlflow.MLFlowLogger                                                             
│         experiment_name: fingerprint enhancer                                                                               
│         tracking_uri: /home/gabriel/fingerprint-enhancement/logs//mlflow/mlruns                                             
│         tags: null                                                                                                          
│         prefix: ''                                                                                                          
│         artifact_location: null                                                                                             
│                                                                                                                             
├── trainer
│   └── _target_: lightning.pytorch.trainer.Trainer                                                                           
│       default_root_dir: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-55-54                           
│       min_epochs: 1                                                                                                         
│       max_epochs: 300                                                                                                       
│       accelerator: gpu                                                                                                      
│       devices: 4                                                                                                            
│       precision: 16                                                                                                         
│       check_val_every_n_epoch: 1                                                                                            
│       deterministic: false                                                                                                  
│                                                                                                                             
├── paths
│   └── root_dir: /home/gabriel/fingerprint-enhancement                                                                       
│       data_dir: /storage/gabriel/basen_train/                                                                               
│       log_dir: /home/gabriel/fingerprint-enhancement/logs/                                                                  
│       output_dir: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-55-54                                 
│       work_dir: /home/gabriel/fingerprint-enhancement                                                                       
│                                                                                                                             
├── extras
│   └── ignore_warnings: false                                                                                                
│       enforce_tags: true                                                                                                    
│       print_config: true                                                                                                    
│                                                                                                                             
├── task_name
│   └── train                                                                                                                 
├── tags
│   └── ['dev']                                                                                                               
├── train
│   └── True                                                                                                                  
├── test
│   └── False                                                                                                                 
└── seed
    └── None                                                                                                                  
[[36m2025-06-09 14:55:54,811[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating datamodule <src.data.enhancer_train_datamodule.EnhancerTrainDataModule>[0m
[[36m2025-06-09 14:55:54,817[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating model <src.models.enhancer_module.EnhancerLitModule>[0m
[[36m2025-06-09 14:55:54,903[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating callbacks...[0m
[[36m2025-06-09 14:55:54,904[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.ModelCheckpoint>[0m
[[36m2025-06-09 14:55:54,908[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.EarlyStopping>[0m
[[36m2025-06-09 14:55:54,909[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.RichModelSummary>[0m
[[36m2025-06-09 14:55:54,910[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.RichProgressBar>[0m
[[36m2025-06-09 14:55:54,910[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating loggers...[0m
[[36m2025-06-09 14:55:54,911[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating logger <lightning.pytorch.loggers.mlflow.MLFlowLogger>[0m
[[36m2025-06-09 14:55:56,249[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating trainer <lightning.pytorch.trainer.Trainer>[0m
[[36m2025-06-09 14:55:56,263[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Logging hyperparameters![0m
[[36m2025-06-09 14:55:56,478[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Starting training![0m
┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃     ┃ Name                                 ┃ Type              ┃ Params ┃ Mode  ┃
┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ 0   │ net                                  │ ResUNet           │  7.6 M │ train │
│ 1   │ net.encoder                          │ Encoder           │  4.9 M │ train │
│ 2   │ net.encoder.enc_blocks               │ ModuleList        │  4.9 M │ train │
│ 3   │ net.encoder.enc_blocks.0             │ ResnetBlock       │  9.8 K │ train │
│ 4   │ net.encoder.enc_blocks.0.block1      │ Block             │    384 │ train │
│ 5   │ net.encoder.enc_blocks.0.block1.proj │ Conv2d            │    320 │ train │
│ 6   │ net.encoder.enc_blocks.0.block1.norm │ GroupNorm         │     64 │ train │
│ 7   │ net.encoder.enc_blocks.0.block1.act  │ SiLU              │      0 │ train │
│ 8   │ net.encoder.enc_blocks.0.block2      │ Block             │  9.3 K │ train │
│ 9   │ net.encoder.enc_blocks.0.block2.proj │ Conv2d            │  9.2 K │ train │
│ 10  │ net.encoder.enc_blocks.0.block2.norm │ GroupNorm         │     64 │ train │
│ 11  │ net.encoder.enc_blocks.0.block2.act  │ SiLU              │      0 │ train │
│ 12  │ net.encoder.enc_blocks.0.res_conv    │ Conv2d            │     64 │ train │
│ 13  │ net.encoder.enc_blocks.1             │ ResnetBlock       │ 57.8 K │ train │
│ 14  │ net.encoder.enc_blocks.1.block1      │ Block             │ 18.6 K │ train │
│ 15  │ net.encoder.enc_blocks.1.block1.proj │ Conv2d            │ 18.5 K │ train │
│ 16  │ net.encoder.enc_blocks.1.block1.norm │ GroupNorm         │    128 │ train │
│ 17  │ net.encoder.enc_blocks.1.block1.act  │ SiLU              │      0 │ train │
│ 18  │ net.encoder.enc_blocks.1.block2      │ Block             │ 37.1 K │ train │
│ 19  │ net.encoder.enc_blocks.1.block2.proj │ Conv2d            │ 36.9 K │ train │
│ 20  │ net.encoder.enc_blocks.1.block2.norm │ GroupNorm         │    128 │ train │
│ 21  │ net.encoder.enc_blocks.1.block2.act  │ SiLU              │      0 │ train │
│ 22  │ net.encoder.enc_blocks.1.res_conv    │ Conv2d            │  2.1 K │ train │
│ 23  │ net.encoder.enc_blocks.2             │ ResnetBlock       │  230 K │ train │
│ 24  │ net.encoder.enc_blocks.2.block1      │ Block             │ 74.1 K │ train │
│ 25  │ net.encoder.enc_blocks.2.block1.proj │ Conv2d            │ 73.9 K │ train │
│ 26  │ net.encoder.enc_blocks.2.block1.norm │ GroupNorm         │    256 │ train │
│ 27  │ net.encoder.enc_blocks.2.block1.act  │ SiLU              │      0 │ train │
│ 28  │ net.encoder.enc_blocks.2.block2      │ Block             │  147 K │ train │
│ 29  │ net.encoder.enc_blocks.2.block2.proj │ Conv2d            │  147 K │ train │
│ 30  │ net.encoder.enc_blocks.2.block2.norm │ GroupNorm         │    256 │ train │
│ 31  │ net.encoder.enc_blocks.2.block2.act  │ SiLU              │      0 │ train │
│ 32  │ net.encoder.enc_blocks.2.res_conv    │ Conv2d            │  8.3 K │ train │
│ 33  │ net.encoder.enc_blocks.3             │ ResnetBlock       │  919 K │ train │
│ 34  │ net.encoder.enc_blocks.3.block1      │ Block             │  295 K │ train │
│ 35  │ net.encoder.enc_blocks.3.block1.proj │ Conv2d            │  295 K │ train │
│ 36  │ net.encoder.enc_blocks.3.block1.norm │ GroupNorm         │    512 │ train │
│ 37  │ net.encoder.enc_blocks.3.block1.act  │ SiLU              │      0 │ train │
│ 38  │ net.encoder.enc_blocks.3.block2      │ Block             │  590 K │ train │
│ 39  │ net.encoder.enc_blocks.3.block2.proj │ Conv2d            │  590 K │ train │
│ 40  │ net.encoder.enc_blocks.3.block2.norm │ GroupNorm         │    512 │ train │
│ 41  │ net.encoder.enc_blocks.3.block2.act  │ SiLU              │      0 │ train │
│ 42  │ net.encoder.enc_blocks.3.res_conv    │ Conv2d            │ 33.0 K │ train │
│ 43  │ net.encoder.enc_blocks.4             │ ResnetBlock       │  3.7 M │ train │
│ 44  │ net.encoder.enc_blocks.4.block1      │ Block             │  1.2 M │ train │
│ 45  │ net.encoder.enc_blocks.4.block1.proj │ Conv2d            │  1.2 M │ train │
│ 46  │ net.encoder.enc_blocks.4.block1.norm │ GroupNorm         │  1.0 K │ train │
│ 47  │ net.encoder.enc_blocks.4.block1.act  │ SiLU              │      0 │ train │
│ 48  │ net.encoder.enc_blocks.4.block2      │ Block             │  2.4 M │ train │
│ 49  │ net.encoder.enc_blocks.4.block2.proj │ Conv2d            │  2.4 M │ train │
│ 50  │ net.encoder.enc_blocks.4.block2.norm │ GroupNorm         │  1.0 K │ train │
│ 51  │ net.encoder.enc_blocks.4.block2.act  │ SiLU              │      0 │ train │
│ 52  │ net.encoder.enc_blocks.4.res_conv    │ Conv2d            │  131 K │ train │
│ 53  │ net.encoder.pool                     │ MaxPool2d         │      0 │ train │
│ 54  │ net.decoder                          │ Decoder           │  2.7 M │ train │
│ 55  │ net.decoder.upconvs                  │ ModuleList        │  174 K │ train │
│ 56  │ net.decoder.upconvs.0                │ Sequential        │  131 K │ train │
│ 57  │ net.decoder.upconvs.0.0              │ Upsample          │      0 │ train │
│ 58  │ net.decoder.upconvs.0.1              │ Conv2d            │  131 K │ train │
│ 59  │ net.decoder.upconvs.1                │ Sequential        │ 32.9 K │ train │
│ 60  │ net.decoder.upconvs.1.0              │ Upsample          │      0 │ train │
│ 61  │ net.decoder.upconvs.1.1              │ Conv2d            │ 32.9 K │ train │
│ 62  │ net.decoder.upconvs.2                │ Sequential        │  8.3 K │ train │
│ 63  │ net.decoder.upconvs.2.0              │ Upsample          │      0 │ train │
│ 64  │ net.decoder.upconvs.2.1              │ Conv2d            │  8.3 K │ train │
│ 65  │ net.decoder.upconvs.3                │ Sequential        │  2.1 K │ train │
│ 66  │ net.decoder.upconvs.3.0              │ Upsample          │      0 │ train │
│ 67  │ net.decoder.upconvs.3.1              │ Conv2d            │  2.1 K │ train │
│ 68  │ net.decoder.dec_blocks               │ ModuleList        │  2.5 M │ train │
│ 69  │ net.decoder.dec_blocks.0             │ ResnetBlock       │  1.9 M │ train │
│ 70  │ net.decoder.dec_blocks.0.block1      │ Block             │  1.2 M │ train │
│ 71  │ net.decoder.dec_blocks.0.block1.proj │ Conv2d            │  1.2 M │ train │
│ 72  │ net.decoder.dec_blocks.0.block1.norm │ GroupNorm         │    512 │ train │
│ 73  │ net.decoder.dec_blocks.0.block1.act  │ SiLU              │      0 │ train │
│ 74  │ net.decoder.dec_blocks.0.block2      │ Block             │  590 K │ train │
│ 75  │ net.decoder.dec_blocks.0.block2.proj │ Conv2d            │  590 K │ train │
│ 76  │ net.decoder.dec_blocks.0.block2.norm │ GroupNorm         │    512 │ train │
│ 77  │ net.decoder.dec_blocks.0.block2.act  │ SiLU              │      0 │ train │
│ 78  │ net.decoder.dec_blocks.0.res_conv    │ Conv2d            │  131 K │ train │
│ 79  │ net.decoder.dec_blocks.1             │ ResnetBlock       │  476 K │ train │
│ 80  │ net.decoder.dec_blocks.1.block1      │ Block             │  295 K │ train │
│ 81  │ net.decoder.dec_blocks.1.block1.proj │ Conv2d            │  295 K │ train │
│ 82  │ net.decoder.dec_blocks.1.block1.norm │ GroupNorm         │    256 │ train │
│ 83  │ net.decoder.dec_blocks.1.block1.act  │ SiLU              │      0 │ train │
│ 84  │ net.decoder.dec_blocks.1.block2      │ Block             │  147 K │ train │
│ 85  │ net.decoder.dec_blocks.1.block2.proj │ Conv2d            │  147 K │ train │
│ 86  │ net.decoder.dec_blocks.1.block2.norm │ GroupNorm         │    256 │ train │
│ 87  │ net.decoder.dec_blocks.1.block2.act  │ SiLU              │      0 │ train │
│ 88  │ net.decoder.dec_blocks.1.res_conv    │ Conv2d            │ 32.9 K │ train │
│ 89  │ net.decoder.dec_blocks.2             │ ResnetBlock       │  119 K │ train │
│ 90  │ net.decoder.dec_blocks.2.block1      │ Block             │ 73.9 K │ train │
│ 91  │ net.decoder.dec_blocks.2.block1.proj │ Conv2d            │ 73.8 K │ train │
│ 92  │ net.decoder.dec_blocks.2.block1.norm │ GroupNorm         │    128 │ train │
│ 93  │ net.decoder.dec_blocks.2.block1.act  │ SiLU              │      0 │ train │
│ 94  │ net.decoder.dec_blocks.2.block2      │ Block             │ 37.1 K │ train │
│ 95  │ net.decoder.dec_blocks.2.block2.proj │ Conv2d            │ 36.9 K │ train │
│ 96  │ net.decoder.dec_blocks.2.block2.norm │ GroupNorm         │    128 │ train │
│ 97  │ net.decoder.dec_blocks.2.block2.act  │ SiLU              │      0 │ train │
│ 98  │ net.decoder.dec_blocks.2.res_conv    │ Conv2d            │  8.3 K │ train │
│ 99  │ net.decoder.dec_blocks.3             │ ResnetBlock       │ 29.9 K │ train │
│ 100 │ net.decoder.dec_blocks.3.block1      │ Block             │ 18.5 K │ train │
│ 101 │ net.decoder.dec_blocks.3.block1.proj │ Conv2d            │ 18.5 K │ train │
│ 102 │ net.decoder.dec_blocks.3.block1.norm │ GroupNorm         │     64 │ train │
│ 103 │ net.decoder.dec_blocks.3.block1.act  │ SiLU              │      0 │ train │
│ 104 │ net.decoder.dec_blocks.3.block2      │ Block             │  9.3 K │ train │
│ 105 │ net.decoder.dec_blocks.3.block2.proj │ Conv2d            │  9.2 K │ train │
│ 106 │ net.decoder.dec_blocks.3.block2.norm │ GroupNorm         │     64 │ train │
│ 107 │ net.decoder.dec_blocks.3.block2.act  │ SiLU              │      0 │ train │
│ 108 │ net.decoder.dec_blocks.3.res_conv    │ Conv2d            │  2.1 K │ train │
│ 109 │ net.head                             │ Conv2d            │     66 │ train │
│ 110 │ criterion                            │ BCEWithLogitsLoss │      0 │ train │
│ 111 │ train_loss                           │ MeanMetric        │      0 │ train │
│ 112 │ val_loss                             │ MeanMetric        │      0 │ train │
│ 113 │ test_loss                            │ MeanMetric        │      0 │ train │
│ 114 │ val_loss_best                        │ MinMetric         │      0 │ train │
└─────┴──────────────────────────────────────┴───────────────────┴────────┴───────┘
Trainable params: 7.6 M                                                                                                       
Non-trainable params: 0                                                                                                       
Total params: 7.6 M                                                                                                           
Total estimated model params size (MB): 30                                                                                    
Modules in train mode: 115                                                                                                    
Modules in eval mode: 0                                                                                                       
torch.Size([])
torch.Size([])
torch.Size([])

[[36m2025-06-09 14:56:09,259[0m][[34msrc.utils.utils[0m][[31mERROR[0m] - [rank: 0] [0m
Traceback (most recent call last):
  File "/home/gabriel/fingerprint-enhancement/src/utils/utils.py", line 68, in wrap
    metric_dict, object_dict = task_func(cfg=cfg)
  File "/home/gabriel/fingerprint-enhancement/src/train.py", line 87, in train
    trainer.fit(model=model, datamodule=datamodule, ckpt_path=cfg.get("ckpt_path"))
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 561, in fit
    call._call_and_handle_interrupt(
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/call.py", line 47, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/launchers/subprocess_script.py", line 105, in launch
    return function(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 599, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 1012, in _run
    results = self._run_stage()
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 1054, in _run_stage
    self._run_sanity_check()
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 1083, in _run_sanity_check
    val_loop.run()
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/loops/utilities.py", line 179, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/loops/evaluation_loop.py", line 145, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/loops/evaluation_loop.py", line 437, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/call.py", line 328, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/strategy.py", line 411, in validation_step
    return self._forward_redirection(self.model, self.lightning_module, "validation_step", *args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/strategy.py", line 641, in __call__
    wrapper_output = wrapper_module(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/strategy.py", line 634, in wrapped_forward
    out = method(*_args, **_kwargs)
  File "/home/gabriel/fingerprint-enhancement/src/models/enhancer_module.py", line 254, in validation_step
    loss = self.model_step(batch)
  File "/home/gabriel/fingerprint-enhancement/src/models/enhancer_module.py", line 222, in model_step
    return loss
NameError: name 'loss' is not defined
[[36m2025-06-09 14:56:09,271[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - [rank: 0] Output dir: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-55-54[0m
torch.Size([])
[[36m2025-06-09 14:56:51,410[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - [rank: 0] Enforcing tags! <cfg.extras.enforce_tags=True>[0m
[[36m2025-06-09 14:56:51,414[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - [rank: 0] Printing config tree with Rich! <cfg.extras.print_config=True>[0m
CONFIG
├── data
│   └── _target_: src.data.enhancer_train_datamodule.EnhancerTrainDataModule                                                  
│       data_dir: /storage/gabriel/basen_train//                                                                              
│       data_list: synth_lat_nfiq80_list_small.txt                                                                            
│       lat_subdir: /synth_lat_nfiq80/                                                                                        
│       ref_subdir: /ref_NFIQ80/                                                                                              
│       skel_subdir: /ref_skel/                                                                                               
│       bin_subdir: /ref_bin/                                                                                                 
│       mask_subdir: /synth_lat_nfiq80_masks/0/                                                                               
│       mnt_subdir: /mnts_ref_fusion/                                                                                         
│       apply_mask: 1                                                                                                         
│       batch_size: 128                                                                                                       
│       train_val_split:                                                                                                      
│       - 0.7                                                                                                                 
│       - 0.3                                                                                                                 
│       num_workers: 8                                                                                                        
│       pin_memory: true                                                                                                      
│                                                                                                                             
├── model
│   └── _target_: src.models.enhancer_module.EnhancerLitModule                                                                
│       optimizer:                                                                                                            
│         _target_: torch.optim.AdamW                                                                                         
│         _partial_: true                                                                                                     
│         lr: 0.0001                                                                                                          
│         weight_decay: 0.0004                                                                                                
│       scheduler:                                                                                                            
│         _target_: torch.optim.lr_scheduler.ReduceLROnPlateau                                                                
│         _partial_: true                                                                                                     
│         mode: min                                                                                                           
│         factor: 0.1                                                                                                         
│         patience: 2                                                                                                         
│       net:                                                                                                                  
│         _target_: src.models.components.ResUNet.ResUNet                                                                     
│         in_ch: 1                                                                                                            
│         ndim: 2                                                                                                             
│         out_ch: 2                                                                                                           
│       compile: false                                                                                                        
│       output_path: /home/gabriel/fingerprint-enhancement/output/                                                            
│       use_patches: false                                                                                                    
│                                                                                                                             
├── callbacks
│   └── model_checkpoint:                                                                                                     
│         _target_: lightning.pytorch.callbacks.ModelCheckpoint                                                               
│         dirpath: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-56-51/checkpoints                      
│         filename: epoch_{epoch:03d}                                                                                         
│         monitor: val/loss_best                                                                                              
│         verbose: false                                                                                                      
│         save_last: true                                                                                                     
│         save_top_k: 1                                                                                                       
│         mode: min                                                                                                           
│         auto_insert_metric_name: false                                                                                      
│         save_weights_only: false                                                                                            
│         every_n_train_steps: null                                                                                           
│         train_time_interval: null                                                                                           
│         every_n_epochs: null                                                                                                
│         save_on_train_epoch_end: null                                                                                       
│       early_stopping:                                                                                                       
│         _target_: lightning.pytorch.callbacks.EarlyStopping                                                                 
│         monitor: val/loss_best                                                                                              
│         min_delta: 0.0                                                                                                      
│         patience: 100                                                                                                       
│         verbose: false                                                                                                      
│         mode: min                                                                                                           
│         strict: true                                                                                                        
│         check_finite: true                                                                                                  
│         stopping_threshold: null                                                                                            
│         divergence_threshold: null                                                                                          
│         check_on_train_epoch_end: null                                                                                      
│       model_summary:                                                                                                        
│         _target_: lightning.pytorch.callbacks.RichModelSummary                                                              
│         max_depth: -1                                                                                                       
│       rich_progress_bar:                                                                                                    
│         _target_: lightning.pytorch.callbacks.RichProgressBar                                                               
│                                                                                                                             
├── logger
│   └── mlflow:                                                                                                               
│         _target_: lightning.pytorch.loggers.mlflow.MLFlowLogger                                                             
│         experiment_name: fingerprint enhancer                                                                               
│         tracking_uri: /home/gabriel/fingerprint-enhancement/logs//mlflow/mlruns                                             
│         tags: null                                                                                                          
│         prefix: ''                                                                                                          
│         artifact_location: null                                                                                             
│                                                                                                                             
├── trainer
│   └── _target_: lightning.pytorch.trainer.Trainer                                                                           
│       default_root_dir: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-56-51                           
│       min_epochs: 1                                                                                                         
│       max_epochs: 300                                                                                                       
│       accelerator: gpu                                                                                                      
│       devices: 4                                                                                                            
│       precision: 16                                                                                                         
│       check_val_every_n_epoch: 1                                                                                            
│       deterministic: false                                                                                                  
│                                                                                                                             
├── paths
│   └── root_dir: /home/gabriel/fingerprint-enhancement                                                                       
│       data_dir: /storage/gabriel/basen_train/                                                                               
│       log_dir: /home/gabriel/fingerprint-enhancement/logs/                                                                  
│       output_dir: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-56-51                                 
│       work_dir: /home/gabriel/fingerprint-enhancement                                                                       
│                                                                                                                             
├── extras
│   └── ignore_warnings: false                                                                                                
│       enforce_tags: true                                                                                                    
│       print_config: true                                                                                                    
│                                                                                                                             
├── task_name
│   └── train                                                                                                                 
├── tags
│   └── ['dev']                                                                                                               
├── train
│   └── True                                                                                                                  
├── test
│   └── False                                                                                                                 
└── seed
    └── None                                                                                                                  
[[36m2025-06-09 14:56:51,555[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating datamodule <src.data.enhancer_train_datamodule.EnhancerTrainDataModule>[0m
[[36m2025-06-09 14:56:51,562[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating model <src.models.enhancer_module.EnhancerLitModule>[0m
[[36m2025-06-09 14:56:51,647[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating callbacks...[0m
[[36m2025-06-09 14:56:51,647[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.ModelCheckpoint>[0m
[[36m2025-06-09 14:56:51,652[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.EarlyStopping>[0m
[[36m2025-06-09 14:56:51,653[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.RichModelSummary>[0m
[[36m2025-06-09 14:56:51,654[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating callback <lightning.pytorch.callbacks.RichProgressBar>[0m
[[36m2025-06-09 14:56:51,654[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating loggers...[0m
[[36m2025-06-09 14:56:51,654[0m][[34msrc.utils.instantiators[0m][[32mINFO[0m] - [rank: 0] Instantiating logger <lightning.pytorch.loggers.mlflow.MLFlowLogger>[0m
[[36m2025-06-09 14:56:52,995[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Instantiating trainer <lightning.pytorch.trainer.Trainer>[0m
[[36m2025-06-09 14:56:53,009[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Logging hyperparameters![0m
[[36m2025-06-09 14:56:53,224[0m][[34m__main__[0m][[32mINFO[0m] - [rank: 0] Starting training![0m
┏━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━┳━━━━━━━━┳━━━━━━━┓
┃     ┃ Name                                 ┃ Type              ┃ Params ┃ Mode  ┃
┡━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━╇━━━━━━━━╇━━━━━━━┩
│ 0   │ net                                  │ ResUNet           │  7.6 M │ train │
│ 1   │ net.encoder                          │ Encoder           │  4.9 M │ train │
│ 2   │ net.encoder.enc_blocks               │ ModuleList        │  4.9 M │ train │
│ 3   │ net.encoder.enc_blocks.0             │ ResnetBlock       │  9.8 K │ train │
│ 4   │ net.encoder.enc_blocks.0.block1      │ Block             │    384 │ train │
│ 5   │ net.encoder.enc_blocks.0.block1.proj │ Conv2d            │    320 │ train │
│ 6   │ net.encoder.enc_blocks.0.block1.norm │ GroupNorm         │     64 │ train │
│ 7   │ net.encoder.enc_blocks.0.block1.act  │ SiLU              │      0 │ train │
│ 8   │ net.encoder.enc_blocks.0.block2      │ Block             │  9.3 K │ train │
│ 9   │ net.encoder.enc_blocks.0.block2.proj │ Conv2d            │  9.2 K │ train │
│ 10  │ net.encoder.enc_blocks.0.block2.norm │ GroupNorm         │     64 │ train │
│ 11  │ net.encoder.enc_blocks.0.block2.act  │ SiLU              │      0 │ train │
│ 12  │ net.encoder.enc_blocks.0.res_conv    │ Conv2d            │     64 │ train │
│ 13  │ net.encoder.enc_blocks.1             │ ResnetBlock       │ 57.8 K │ train │
│ 14  │ net.encoder.enc_blocks.1.block1      │ Block             │ 18.6 K │ train │
│ 15  │ net.encoder.enc_blocks.1.block1.proj │ Conv2d            │ 18.5 K │ train │
│ 16  │ net.encoder.enc_blocks.1.block1.norm │ GroupNorm         │    128 │ train │
│ 17  │ net.encoder.enc_blocks.1.block1.act  │ SiLU              │      0 │ train │
│ 18  │ net.encoder.enc_blocks.1.block2      │ Block             │ 37.1 K │ train │
│ 19  │ net.encoder.enc_blocks.1.block2.proj │ Conv2d            │ 36.9 K │ train │
│ 20  │ net.encoder.enc_blocks.1.block2.norm │ GroupNorm         │    128 │ train │
│ 21  │ net.encoder.enc_blocks.1.block2.act  │ SiLU              │      0 │ train │
│ 22  │ net.encoder.enc_blocks.1.res_conv    │ Conv2d            │  2.1 K │ train │
│ 23  │ net.encoder.enc_blocks.2             │ ResnetBlock       │  230 K │ train │
│ 24  │ net.encoder.enc_blocks.2.block1      │ Block             │ 74.1 K │ train │
│ 25  │ net.encoder.enc_blocks.2.block1.proj │ Conv2d            │ 73.9 K │ train │
│ 26  │ net.encoder.enc_blocks.2.block1.norm │ GroupNorm         │    256 │ train │
│ 27  │ net.encoder.enc_blocks.2.block1.act  │ SiLU              │      0 │ train │
│ 28  │ net.encoder.enc_blocks.2.block2      │ Block             │  147 K │ train │
│ 29  │ net.encoder.enc_blocks.2.block2.proj │ Conv2d            │  147 K │ train │
│ 30  │ net.encoder.enc_blocks.2.block2.norm │ GroupNorm         │    256 │ train │
│ 31  │ net.encoder.enc_blocks.2.block2.act  │ SiLU              │      0 │ train │
│ 32  │ net.encoder.enc_blocks.2.res_conv    │ Conv2d            │  8.3 K │ train │
│ 33  │ net.encoder.enc_blocks.3             │ ResnetBlock       │  919 K │ train │
│ 34  │ net.encoder.enc_blocks.3.block1      │ Block             │  295 K │ train │
│ 35  │ net.encoder.enc_blocks.3.block1.proj │ Conv2d            │  295 K │ train │
│ 36  │ net.encoder.enc_blocks.3.block1.norm │ GroupNorm         │    512 │ train │
│ 37  │ net.encoder.enc_blocks.3.block1.act  │ SiLU              │      0 │ train │
│ 38  │ net.encoder.enc_blocks.3.block2      │ Block             │  590 K │ train │
│ 39  │ net.encoder.enc_blocks.3.block2.proj │ Conv2d            │  590 K │ train │
│ 40  │ net.encoder.enc_blocks.3.block2.norm │ GroupNorm         │    512 │ train │
│ 41  │ net.encoder.enc_blocks.3.block2.act  │ SiLU              │      0 │ train │
│ 42  │ net.encoder.enc_blocks.3.res_conv    │ Conv2d            │ 33.0 K │ train │
│ 43  │ net.encoder.enc_blocks.4             │ ResnetBlock       │  3.7 M │ train │
│ 44  │ net.encoder.enc_blocks.4.block1      │ Block             │  1.2 M │ train │
│ 45  │ net.encoder.enc_blocks.4.block1.proj │ Conv2d            │  1.2 M │ train │
│ 46  │ net.encoder.enc_blocks.4.block1.norm │ GroupNorm         │  1.0 K │ train │
│ 47  │ net.encoder.enc_blocks.4.block1.act  │ SiLU              │      0 │ train │
│ 48  │ net.encoder.enc_blocks.4.block2      │ Block             │  2.4 M │ train │
│ 49  │ net.encoder.enc_blocks.4.block2.proj │ Conv2d            │  2.4 M │ train │
│ 50  │ net.encoder.enc_blocks.4.block2.norm │ GroupNorm         │  1.0 K │ train │
│ 51  │ net.encoder.enc_blocks.4.block2.act  │ SiLU              │      0 │ train │
│ 52  │ net.encoder.enc_blocks.4.res_conv    │ Conv2d            │  131 K │ train │
│ 53  │ net.encoder.pool                     │ MaxPool2d         │      0 │ train │
│ 54  │ net.decoder                          │ Decoder           │  2.7 M │ train │
│ 55  │ net.decoder.upconvs                  │ ModuleList        │  174 K │ train │
│ 56  │ net.decoder.upconvs.0                │ Sequential        │  131 K │ train │
│ 57  │ net.decoder.upconvs.0.0              │ Upsample          │      0 │ train │
│ 58  │ net.decoder.upconvs.0.1              │ Conv2d            │  131 K │ train │
│ 59  │ net.decoder.upconvs.1                │ Sequential        │ 32.9 K │ train │
│ 60  │ net.decoder.upconvs.1.0              │ Upsample          │      0 │ train │
│ 61  │ net.decoder.upconvs.1.1              │ Conv2d            │ 32.9 K │ train │
│ 62  │ net.decoder.upconvs.2                │ Sequential        │  8.3 K │ train │
│ 63  │ net.decoder.upconvs.2.0              │ Upsample          │      0 │ train │
│ 64  │ net.decoder.upconvs.2.1              │ Conv2d            │  8.3 K │ train │
│ 65  │ net.decoder.upconvs.3                │ Sequential        │  2.1 K │ train │
│ 66  │ net.decoder.upconvs.3.0              │ Upsample          │      0 │ train │
│ 67  │ net.decoder.upconvs.3.1              │ Conv2d            │  2.1 K │ train │
│ 68  │ net.decoder.dec_blocks               │ ModuleList        │  2.5 M │ train │
│ 69  │ net.decoder.dec_blocks.0             │ ResnetBlock       │  1.9 M │ train │
│ 70  │ net.decoder.dec_blocks.0.block1      │ Block             │  1.2 M │ train │
│ 71  │ net.decoder.dec_blocks.0.block1.proj │ Conv2d            │  1.2 M │ train │
│ 72  │ net.decoder.dec_blocks.0.block1.norm │ GroupNorm         │    512 │ train │
│ 73  │ net.decoder.dec_blocks.0.block1.act  │ SiLU              │      0 │ train │
│ 74  │ net.decoder.dec_blocks.0.block2      │ Block             │  590 K │ train │
│ 75  │ net.decoder.dec_blocks.0.block2.proj │ Conv2d            │  590 K │ train │
│ 76  │ net.decoder.dec_blocks.0.block2.norm │ GroupNorm         │    512 │ train │
│ 77  │ net.decoder.dec_blocks.0.block2.act  │ SiLU              │      0 │ train │
│ 78  │ net.decoder.dec_blocks.0.res_conv    │ Conv2d            │  131 K │ train │
│ 79  │ net.decoder.dec_blocks.1             │ ResnetBlock       │  476 K │ train │
│ 80  │ net.decoder.dec_blocks.1.block1      │ Block             │  295 K │ train │
│ 81  │ net.decoder.dec_blocks.1.block1.proj │ Conv2d            │  295 K │ train │
│ 82  │ net.decoder.dec_blocks.1.block1.norm │ GroupNorm         │    256 │ train │
│ 83  │ net.decoder.dec_blocks.1.block1.act  │ SiLU              │      0 │ train │
│ 84  │ net.decoder.dec_blocks.1.block2      │ Block             │  147 K │ train │
│ 85  │ net.decoder.dec_blocks.1.block2.proj │ Conv2d            │  147 K │ train │
│ 86  │ net.decoder.dec_blocks.1.block2.norm │ GroupNorm         │    256 │ train │
│ 87  │ net.decoder.dec_blocks.1.block2.act  │ SiLU              │      0 │ train │
│ 88  │ net.decoder.dec_blocks.1.res_conv    │ Conv2d            │ 32.9 K │ train │
│ 89  │ net.decoder.dec_blocks.2             │ ResnetBlock       │  119 K │ train │
│ 90  │ net.decoder.dec_blocks.2.block1      │ Block             │ 73.9 K │ train │
│ 91  │ net.decoder.dec_blocks.2.block1.proj │ Conv2d            │ 73.8 K │ train │
│ 92  │ net.decoder.dec_blocks.2.block1.norm │ GroupNorm         │    128 │ train │
│ 93  │ net.decoder.dec_blocks.2.block1.act  │ SiLU              │      0 │ train │
│ 94  │ net.decoder.dec_blocks.2.block2      │ Block             │ 37.1 K │ train │
│ 95  │ net.decoder.dec_blocks.2.block2.proj │ Conv2d            │ 36.9 K │ train │
│ 96  │ net.decoder.dec_blocks.2.block2.norm │ GroupNorm         │    128 │ train │
│ 97  │ net.decoder.dec_blocks.2.block2.act  │ SiLU              │      0 │ train │
│ 98  │ net.decoder.dec_blocks.2.res_conv    │ Conv2d            │  8.3 K │ train │
│ 99  │ net.decoder.dec_blocks.3             │ ResnetBlock       │ 29.9 K │ train │
│ 100 │ net.decoder.dec_blocks.3.block1      │ Block             │ 18.5 K │ train │
│ 101 │ net.decoder.dec_blocks.3.block1.proj │ Conv2d            │ 18.5 K │ train │
│ 102 │ net.decoder.dec_blocks.3.block1.norm │ GroupNorm         │     64 │ train │
│ 103 │ net.decoder.dec_blocks.3.block1.act  │ SiLU              │      0 │ train │
│ 104 │ net.decoder.dec_blocks.3.block2      │ Block             │  9.3 K │ train │
│ 105 │ net.decoder.dec_blocks.3.block2.proj │ Conv2d            │  9.2 K │ train │
│ 106 │ net.decoder.dec_blocks.3.block2.norm │ GroupNorm         │     64 │ train │
│ 107 │ net.decoder.dec_blocks.3.block2.act  │ SiLU              │      0 │ train │
│ 108 │ net.decoder.dec_blocks.3.res_conv    │ Conv2d            │  2.1 K │ train │
│ 109 │ net.head                             │ Conv2d            │     66 │ train │
│ 110 │ criterion                            │ BCEWithLogitsLoss │      0 │ train │
│ 111 │ train_loss                           │ MeanMetric        │      0 │ train │
│ 112 │ val_loss                             │ MeanMetric        │      0 │ train │
│ 113 │ test_loss                            │ MeanMetric        │      0 │ train │
│ 114 │ val_loss_best                        │ MinMetric         │      0 │ train │
└─────┴──────────────────────────────────────┴───────────────────┴────────┴───────┘
Trainable params: 7.6 M                                                                                                       
Non-trainable params: 0                                                                                                       
Total params: 7.6 M                                                                                                           
Total estimated model params size (MB): 30                                                                                    
Modules in train mode: 115                                                                                                    
Modules in eval mode: 0                                                                                                       
tensor(0.5465, device='cuda:0')

[[36m2025-06-09 14:57:06,218[0m][[34msrc.utils.utils[0m][[31mERROR[0m] - [rank: 0] [0m
Traceback (most recent call last):
  File "/home/gabriel/fingerprint-enhancement/src/utils/utils.py", line 68, in wrap
    metric_dict, object_dict = task_func(cfg=cfg)
  File "/home/gabriel/fingerprint-enhancement/src/train.py", line 87, in train
    trainer.fit(model=model, datamodule=datamodule, ckpt_path=cfg.get("ckpt_path"))
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 561, in fit
    call._call_and_handle_interrupt(
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/call.py", line 47, in _call_and_handle_interrupt
    return trainer.strategy.launcher.launch(trainer_fn, *args, trainer=trainer, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/launchers/subprocess_script.py", line 105, in launch
    return function(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 599, in _fit_impl
    self._run(model, ckpt_path=ckpt_path)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 1012, in _run
    results = self._run_stage()
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 1054, in _run_stage
    self._run_sanity_check()
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/trainer.py", line 1083, in _run_sanity_check
    val_loop.run()
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/loops/utilities.py", line 179, in _decorator
    return loop_run(self, *args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/loops/evaluation_loop.py", line 145, in run
    self._evaluation_step(batch, batch_idx, dataloader_idx, dataloader_iter)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/loops/evaluation_loop.py", line 437, in _evaluation_step
    output = call._call_strategy_hook(trainer, hook_name, *step_args)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/trainer/call.py", line 328, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/strategy.py", line 411, in validation_step
    return self._forward_redirection(self.model, self.lightning_module, "validation_step", *args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/strategy.py", line 641, in __call__
    wrapper_output = wrapper_module(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1643, in forward
    else self._run_ddp_forward(*inputs, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/parallel/distributed.py", line 1459, in _run_ddp_forward
    return self.module(*inputs, **kwargs)  # type: ignore[index]
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/gabriel/miniconda3/envs/hydra/lib/python3.10/site-packages/lightning/pytorch/strategies/strategy.py", line 634, in wrapped_forward
    out = method(*_args, **_kwargs)
  File "/home/gabriel/fingerprint-enhancement/src/models/enhancer_module.py", line 254, in validation_step
    loss = self.model_step(batch)
  File "/home/gabriel/fingerprint-enhancement/src/models/enhancer_module.py", line 222, in model_step
    return loss
NameError: name 'loss' is not defined
[[36m2025-06-09 14:57:06,233[0m][[34msrc.utils.utils[0m][[32mINFO[0m] - [rank: 0] Output dir: /home/gabriel/fingerprint-enhancement/logs/train/runs/2025-06-09_14-56-51[0m
tensor(0.5018, device='cuda:3')
tensor(0.5113, device='cuda:2')
tensor(0.5225, device='cuda:1')
